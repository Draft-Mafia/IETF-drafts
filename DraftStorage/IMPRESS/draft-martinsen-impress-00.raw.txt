



TRAM                                                        P. Martinsen
Internet-Draft                                                     Cisco
Intended status: Standards Track                        February 6, 2014
Expires: August 10, 2014


             In-band Media PRopErties Signalling with STUN
                       draft-martinsen-impress-00

Abstract

   It can be useful for applications to provide some limited information
   regarding the properties of the data the application is sending.
   Such properties can be used by on-path devices to give the
   application a better user experience.  It is also useful for the
   application to know the current status of the on-path devices
   (Network).  If the application knows that the network path is
   congested, it can take appropriate action to not make the situation
   any worse.

   This draft describes how this can be achieved by adding two small
   attributes to any STUN packet sent by the application.  For example;
   such STUN packets are sent during call setup when ICE connectivity
   checks er performed or when the call is established in keep-alive
   messages.  The application and devices on the media path can use the
   information in the two STUN attributes to prioritize the flow,
   perform traffic engineering, or provide network analytics.

   This STUN attributes in this draft are on purpose small and strictly
   specified.  This is to avoid unnecessary information leakage and
   other security concerns regarding growing the size of the STUN
   message.  The functionality described here is referred to as IMPRESS.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 10, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction
   2.  General Usage
   3.  Interaction with ICE
   4.  Multiplexed streams
   5.  Network Processing
   6.  New STUN attributes
     6.1.  STREAM PROPERTIES
       6.1.1.  Generic
       6.1.2.  Audio
       6.1.3.  Video
     6.2.  NETWORK STATUS
   7.  References
     7.1.  Normative References
     7.2.  Informational References
   Author's Address

1.  Introduction

   In the context of Content, Mobile, Fixed Service, Service Providers,
   Enterprise and Private networks have a need to prioritize packet
   flows end-to-end.  These flows are often dynamic, time-bound,
   encrypted, peer-to-peer, possibly asymmetric, and might have
   different priorities depending on network conditions, direction, time
   of the day, dynamic user preferences and other factors.  These
   factors may be time variant, and thus need to be signalled.
   Moreover, in many cases of peer-to-peer communication, flow
   information is known only to the endpoint.  These considerations,
   coupled with the trend to use encryption for browser-to-browser
   communication [I-D.ietf-rtcweb-security-arch], imply that access
   lists, deep packet inspection and other static prioritization methods
   cannot be employed successfully to prioritize packet flows.  This
   specification describes how these problems can be solved by using
   defining two strictly defined STUN [RFC5389] attributes which can be
   added to any STUN message the client wants to send.  STUN messages
   are typically sent during the ICE [RFC5245] connectivity check phase
   when the media session is established, or when keep-alive STUN
   messages are sent after the session is established.  The application
   is not limited to those two scenarios, if some communication between
   application and network is needed it can choose to do so at any time.

   Devices on the media path can use the information in the STUN
   attributes to prioritize the flow, perform traffic engineering, or
   provide network analytics.  Applications can use information in
   network status attribute to influence rate stating points or rate
   adaption mechanisms.

   This document describes a mechanism for how such application
   properties and network status can be sent by STUN.  The functionality
   described here is referred to as IMPRESS.  Due to the security
   implications described in (TODO: Ref Martins draft) where large STUN
   packet are used amplify an attack, keeping the added STUN attributes
   is an important design consideration.  To avoid unwanted information
   leakage the two defined attributes STREAM_PROPERTIES and
   NETWORK_STATUS are strictly defined in this draft.

2.  General Usage

   This draft defines two attributes that can be added to a STUN
   message; STREAM-PROPERTIES and NETWORK-STATUS.  Se section ?? for the
   formal description.  It is RECOMMENDED to add them to a STUN request
   response pair, especially if the NETWORK STATUS attribute is in use.

   The STREAM-PROPERTIES attribute MUST be added before any INTEGRITY
   attribute.  It is RECOMMENDED to only add this attribute to STUN
   messages containing a INTEGRITY attribute as this prevents tampering
   with the content of the attribute.

   If the client wants to receive feedback from the network it must add
   a empty NETWORK-STATUS attribute.  This attribute MUST be added after
   the INTEGRITY attribute, as on-path devices will write information
   into this attribute.  Having a readily available attribute to write
   into will save the the on-path device from growing buffers to add
   their own attribute.  On path devices SHOULD not add their own
   NETWORK-STATUS attribute.

   If an agent receives a STUN request with a NETWORK-STATUS attribute
   after the INTEGRITY attribute, it should copy the content into a new
   NETWORK-STATUS attribute and add it before the INTEGRITY attribute
   when sending the STUN response.  A new empty NETWORK-STATUS attribute
   can be added after the INTEGRITY attribute.  New STEAM-PROPERTIES
   attributes can also be added describing the stream in this direction.

   If an agent receives a STUN response with a NETWORK-STATUS attribute
   before the INTEGRITY attribute, this describes the stream in the
   upstream direction.  A NETWORK-STATUS attribute after the INTEGRITY
   attribute describes the stream in the downstream direction.

   [[Q1: Do we want to restrict this to req/resp or do we want to allow
   for the attributes to be added in this fashion for indications as
   well? --palmarti]]

     Alice                router1            router2              Bob
      |                      |                   |                  |
      |Binding_Request       |                   |                  |
   (1)|--------------------->|(2)                |                  |
      |                      |                   |                  |
      |                      |Binding_Request    |                  |
      |                      |------------------------------------->|
      |                      |                   |                  |
      |                      |                   | Binding_Response |
      |                      |                   |<-----------------|(3)
      |                      |  Binding_Response |                  |
      |<-----------------------------------------|(4)               |
      |(5)                   |                   |                  |


                           IMPRESS example flow

   1.  Alice creates a Binding Request, add STREAM-PROPERTY attribute
       before the INTEGRITY attribute and a single NETWORK-STATUS
       attribute after the INTEGRITY attribute.

   2.  Router1 inspects the STUN Request message and reads STREAM-
       PROPERTY attribute and the information it contains.  It then
       updates the NETWORK-STATUS attribute with any information the
       router have.  It then forwards the request.

   3.  Bob processes the STUN Request.  When Bob builds the response, it
       copies the NETWORK-STATUS attribute into the STUN Response before
       the INTEGRITY check and adds new empty NETWORK-STATUS attribute
       after the INTEGRITY attribute.  Bob then transmits the message.

   4.  Router2 (first IMPRESS network element for the downstream
       direction) inspects the Response message, reads the STREAM-
       PROPERTIES attribute and MAY alter the NETWORK-STATUS attribute
       located after the INTEGRITY attribute.  It then transmits the
       message.

   5.  When Alice receives the STUN Response, she can extract the
       STREAM-PROPERTIES attribute and the two NETWORK-STATUS attributes
       to get a complete picture of what the remote agent is sending and
       how the status of both the upstream and downstream path.

3.  Interaction with ICE

   An ICE connectivity check is performed by sending a STUN Binding
   indication.  Prior to sending the agent can add one STREAM-PROPERTY
   attribute.  If added, only one MUST be added.  This is to avoid
   unnecessary large STUN packets during the connectivity checks.  If
   the connectivity check is sent on a 5-tuple that multiplexes
   different types of media and more detailed information wants to be
   signalled it should be done after the connectivity check phase is
   finished.

   [[Q2: Problem with consent freshness if not based on STUN.
   --palmarti]]

4.  Multiplexed streams

   TODO: Write.  Explain in detail what options you have with
   multiplexed streams.  If not used in conn checks you can add more
   than one attribute.

5.  Network Processing

   TODO: Write properly.  Update the node cont field.  Only update other
   fields if they are worse than what is already there (Aggregated
   result).  Values are only hints, no promises.  Will not describe
   algorithm to calculate congestion value.  But values close to MAX may
   lead to applications rate adoption mechanisms to kick in.  (Fairness
   problem)

   TODO: Describe interaction with DSCP.  The rtcweb-qos documents
   explicitly says how to map for instance video to a DSCP value.  If
   the DSCP values was somehow reset on the path (That happens) the
   router can remark the IP packets correctly by looking at the STUN
   message.  (IE the signalling in the STUN message survives the whole
   path, and is integrity protects, but the network node have no way of
   detecting that...)

6.  New STUN attributes

   This STUN extension defines the following new attributes:

                            0xXXXX: STREAM PROPERTIES
                            0xYYYY: NETWORK STATUS

6.1.  STREAM PROPERTIES

   This attribute have a length that are multiples of 4 (128) so no
   padding is necessary.

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |        STREAM TYPE            |   Bandwidth (kbps)            |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |   Delay Tol   |   Loss Tol    |         TBD                   |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |             Stream Type specific Value (64 bits)              |
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                   Figure 1: STREAM PROPERTIES Attribute

   STREAM TYPE:  STREAM TYPE a a 16 bit value defined in section ??
      describing the flow.

   Bandwidth:  MUST be a number describing the approximate bandwidth
      usage in kbps.  If this is unknown the value 0x0 is used.

   Delay Tol:  Delay tolerance in ms.  A number describing the total
      delay a stream can experience before problems occur.

   Loss Tol:  Loss tolerance.  Number describing percentage of packets
      that can be lost without severely affecting the quality of the
      stream.

   Stream Type Specific Value:  64 bits of the attribute is reserved for
      further description of the specific STREAM TYPE.  This value field
      is thus dependant on the type field and entities not understanding
      the specific STREAM TYPE should ignore this when parsing.

   There are four stream types types defined:

                            0x0001 Generic
                            0x0002 Audio
                            0x0004 Video
                            0x0008 Application Data

                          Figure 2: STREAM Types

   The intention is to keep the number of types limited and fairly
   general.  There are 64 bits set aside for each stream type for
   further description.

   It is possible to combine the stream types if a stream contains more
   than one type.  The 64 bit value filed MUST then be treated as if the
   type was Generic (0x0001).  (TODO: Define generic field to better
   suit this scenario)

   If a 5-tuple is used to send both a audio and video stream, the
   stream type can be set to 0x0006.  The type specific value field will
   then have the same properties as if the type was generic.  This can
   be useful if the application wants to hint that the 5-tuple contains
   several streams, but have no other useful information to share.  This
   is useful if the attribute is added to STUN binding requests during
   ICE connectivity checks.  If more information regarding multiplexed
   streams is needed it is possible to add more than one attribute to a
   STUN message (See section ??).  This can be done to STUN messages
   that are being sent after the connectivity check phase is finished
   (Keepalive, consent freshness).  During this phase the added size of
   the STUN messages pose no security threat.

6.1.1.  Generic

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |            0x0001              |      Bandwidth (kbps)        |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | max retransmit|  retransmits   |           0xFF               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                              0xFFFF                           |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


                       Figure 3: Stream Type Generic

   max retransmits:  Maximal number of retransmits a client will do
      before giving up.  For example a normal STUN transactions have 10
      retransmits before it is considered as failed.  RTP will typically
      have 0 retransmits.

   retransmits:  Current number of retransmits for non reliable packets
      in this stream.  If this number is close to the mac retransmits it
      might be nice of the network element to consider not to drop the
      next packets coming.

6.1.2.  Audio

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |            0x0002             |       Bandwidth (kbps)        |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |    Sample Rate (Hz)           |          0xFF                 |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                              0xFFFF                           |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


                        Figure 4: Stream Type Audio

   Sample Rate:  The current sample rate the audio codec used in this
      stream is sampled with.

6.1.3.  Video

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |            0x0003              |      Bandwidth (kbps)        |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |      Vertical Resolution       |     Horizontal Resolution    |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |             FPS                |          Jitter (ms)         |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


                        Figure 5: STREAM Type Video

   Bandwidth:  Bandwidth usage with video encoders are elastic.  This
      value should indicate what max bandwidth value the encoder are set
      up to use.  Dependant on movement in the picture and other video
      specific parameters the actual bandwidth usage might be lower than
      indicated.  Note that this value can change over time as rate
      adaption algorithms in the encoder might change this value.

   Vertical Resolution:  Current vertical resolution used in the video
      encoded in the stream.  Note that this value might change over
      time as the encoder might change this dependant on many different
      parameters.  (In some instances a encoder can decide that changing
      from 1080p30 to 720p60 will give the end user a better user
      experience)

   Horizontal Resolution:  Current horizontal resolution.

   FPS:  How many frames per seconds the video in the stream is encoded
      with.

6.2.  NETWORK STATUS

   This attribute have a length that are multiples of 4 (64) so no
   padding is necessary.

   This attribute MUST be added after any INTEGRITY attribute in the
   STUN message.  Values in this attribute can be updated along the
   network path by nodes that are not able to regenerate a correct
   INTEGRITY attribute.

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | Link TYPE     |Conguestion Lvl| Node Cnt      |    0xFF       |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | Up Bandwidth (kbps)           |   Down Bandwidth (kbps)       |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                    Figure 6: NETWORK STATUS Attribute

   Link TYPE:  Value describing what kind of link types the other fields
      in the attribute describes.  For home and small routers where the
      information is limited the value can for example be set to SHARED
      (0x01).  For routers with more control the value can be set to
      either HOST, APPLICATION, SESSION or STREAM.  (Todo: Link those to
      fields in STREAM PROPERTIES?)

   Conguestion Lvl:  Value in the range 0x00 and Ox0F describing the
      level of congestion the network element is experiencing at this
      point. 0x00 means no congestion, 0x0F Fully congested.  The router
      can choose any value between those value as it sees fit.  The
      application that sees those values might act on by doing some rate
      adaption or similar.  The values 0x10-0xFF are reserved for future
      use.

   Node Cnt:  Numbers of nodes that supports IMPRESS in the notwork
      path.  Any router on the path that understands IMPRESS should
      increase this number.  Other fields should only be updated if the
      value is worse than what is already in the attribute.

   Up Bandwidth:  Bandwidth in kbps available in the upstream direction.

   Down Bandwidth:  Bandwidth in kbps available in the downstream
      direction.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5389]  Rosenberg, J., Mahy, R., Matthews, P., and D. Wing,
              "Session Traversal Utilities for NAT (STUN)", RFC 5389,
              October 2008.

   [RFC5245]  Rosenberg, J., "Interactive Connectivity Establishment
              (ICE): A Protocol for Network Address Translator (NAT)
              Traversal for Offer/Answer Protocols", RFC 5245, April
              2010.

7.2.  Informational References

   [I-D.ietf-rtcweb-security-arch]
              Rescorla, E., "WebRTC Security Architecture", draft-ietf-
              rtcweb-security-arch-07 (work in progress), July 2013.

Author's Address

   Paal-Erik Martinsen
   Cisco Systems, Inc.
   Philip Pedersens vei 20
   Lysaker, Akershus  1366
   Norway

   Email: palmarti@cisco.com

