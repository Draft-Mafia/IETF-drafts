<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<?rfc autobreaks="yes"?>
<!-- Prevent automatic page break -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-flow-metadata-rsvp-00"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="Flow Metadata Encoding">Protocol independent encoding for
    signaling flow characteristics</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor-->

    <author fullname="Toerless Eckert" initials="T." role="editor"
            surname="Eckert">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street/>

          <!-- Reorder these if your country does things differently -->

          <city>San Jose</city>

          <region/>

          <code/>

          <country>US</country>
        </postal>

        <email>eckert@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Anca Zamfir" initials="A." surname="Zamfir">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>EPFL, Quartier de l'Innovation</street>

          <city>Ecublens</city>

          <region>Vaud</region>

          <code>1015</code>

          <country>Switzerland</country>
        </postal>

        <email>ancaz@cisco.com</email>
      </address>
    </author>

    <author fullname="Amine Choukir" initials="A." surname="Choukir">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>EPFL, Quartier de l'Innovation</street>

          <!-- Reorder these if your country does things differently -->

          <city>Ecublens</city>

          <region>Vaud</region>

          <code>1015</code>

          <country>CH</country>
        </postal>

        <phone>+41 78 75 98 561</phone>

        <email>amchouki@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date day="19" month="June" year="2013"/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
         in the current day and month for you. If the year is not the current one, it is
         necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
         purpose of calculating the expiry date).  With drafts it is normally sufficient to
         specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
         If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This specification describes the use of the RSVP resource reservation
      protocol for signaling flow metadata attributes.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Flow Metadata attributes are elements that identify flow
      characteristics, such as the type of media carried by the flow (e.g.
      video), the service class, the application that originated the flow,
      etc. The technology that makes use of Flow Metadata and some of the
      attributes are defined in [ID-FMD-FRAMEWORK]. The flow attributes can be
      inspected by intermediate network nodes and policies may be applied to
      the flow or network analytics could be collected. This specification
      proposes the use of RSVP as signaling protocol to carry the Flow
      Metadata. A new object is defined to carry the Flow Metadata
      information. Two C-Type values are proposed for this object to allow for
      two possible encodings.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="WTF Heading1">
      <section title="WTF Heading2">
        <section title="WTF Heading3">
          <section title="WTF Heading4">
          </section>
        </section>
      </section>
    </section>

    <section title="Flow Metadata Object">
      <t>This specification defines a new RSVP object with Class-Num from the
      0x11bbbbbb range. The object can be inserted into any message type 
      for IPv4 and IPv6 sessions. To support purely informational/advisory
      metadata attributes from sender to receiver, it is sufficient to insert
      the object into PATH messages (i.e. PATH messages with SESSION Class
       = 1 and SENDER_TEMPLATE Class = 11). The Metadata object
      SHOULD appear only once in the message.
      </t>

      <t>The object definition is given in Section 2.1 while the details of
      processing are covered in Section 2.2</t>

      <section title="FLOW_METADATA Class ">
        <t>FLOW_METADATA Class = 234</t>

        <t>We define two encodings, both of which can carry the same IPFIX registered
            attributes. The first encoding (Basic IPFIX FLOW_METADATA) has less flexibility
            and lower encoding efficiency. It does not suport a range of options
            that the second one does, including the signaling of sender and receiver
            attributes, security elements, distinction of originator of the attributes
            and ease of extensibility.
        </t>

        <section title="Basic IPFIX FLOW_METADATA Object">

          <t>Basic IPFIX FLOW_METADATA Object: Class = 234, C-Type =
          1</t>
  
          <t><list style="symbols">
              <t>The metadata attributes are encoded in IPFIX format, as
              described in [RFC5101], with the following restrictions when
              creating the object:<list style="symbols">
                  <t>Options Template Record MUST NOT be present</t>
  
                  <t>One and only one Template Record MUST be present</t>
  
                  <t>One and only one Data Record MUST be included</t>
                </list></t>
  
              <t>An intermediate node that supports this specification SHOULD
              ignore any Options Template Record. It SHOULD only decode and
              process the first occurring Template and Data Records.</t>
            </list></t>
  
          <t/>
        </section>

        <section title="Enhanced Protocol Independent FLOW_METADATA Object">

          <t>Enhanced Protocol Independent FLOW_METADATA Object: Class = 234, C-Type =
          2</t>
  
          <t><list style="symbols">
              <t>The contents and encoding rules for this object are specified
              in [ID-FMD-FRAMEWORK] and [ID-FMD-ENCODE].</t>
            </list></t>
        </section>

      </section>

      <section title="Semantic of carrying the Metadata Object">
          <t>
              The Metadata Object included in the PATH message carries attributes
              from the sender of the flow towards the receiver. If the sender does
              not support the Metadata attribute, they may instead be inserted by
              a proxy along the path of the flow. Further network nodes may
              modify the metadata attributes for purpose of policy or to provide
              feedback (advisory metadata) toward the receiver.
          </t>

          <t>The node that originates Metadata information in a PATH message
              may do so for the sole purpose of signaling Metadata information only.
              We call this an informational/advisory metadata transaction in RSVP. 
              This transacation may consist only of the PATH messages traveling towards
              the receiver of the flow, and it not even necessary that the receiver supports RSVP
              because the actions driven by the Metdata object are alredy triggered
              purely by the PATH message.  To indicate this case, the SENDER_TSPEC
              objects fields (as defined by [RFC 2210]) should be set to 0:<list style="symbols">
                  <t>Token Bucket Rate [r]</t>

            <t>Token Bucket Size [b]</t>

            <t>Peak Data Rate [p]</t>

            <t>Minimum Policed Unit [m]</t>
          </list></t>

          <t>If the Metadata object is inserted in a PATH message with a different
              TSPEC, then all the normal rules of RSVP transactions apply. In other
              words, the RSVP resource reservation will take place and its behavior/policy
              may be impacted by the metadata attributes. In addition any actions
              driven purely by the metadata attributes (like in the informational/advisory
              transaction) can equally take place but may be impacted also by the outcome
              of the resource reservation.
          </t>

          <t>
              If the Enhanced Protocol Independent FLOW_METADATA encoding is used,
              the sender/proxy of the message can indicate attributes not only for
              the flow it sends, but also for its return flow. Feedback from
              further nodes along the path can be distinguished from the sender/proxy
              attributes through the encoding. The specific processing rules for these
              options are left for followup documents.
          </t>

          <t>
              A Metadata Object included in a RESV message carries attributes
              from the receiver of the flow towards the sender. This is primarily
              to reflect advisory metadata (attributes inserted/modified by network
              elements) back to the sender. The specific processing rules for
              this option is left for followup documents.
          </t>

      </section>

      <section title="Processing by a Non-Metadata Capable RSVP Router">
        <t>As described in RFC2205, a node that does not understand the
        Metadata object, should ignore but forward it, unexamined and
        unmodified. When received in PATH or RESV messages, it should be saved
        with the corresponding state and forwarded in any refresh message
        resulting from that state.</t>
      </section>


      <section title="Processing by a Metadata Capable RSVP Router">
        <t>The Metadata object may be inserted by the data flow initiating
        endpoint or network nodes along the path. The means
        by which an implementation determines the content of the Metadata
        object is outside the scope of this document.</t>

        <t>Intermediate nodes that support this specification, decode the Flow
        Metadata information as indicated by the C-Type field only when
        received in PATH message. Depending on the attributes, local
        configuration and policies, the node may take some actions. The
        Metadata attribute semantics are described in [ID-FMD-FRAMEWORK]. The
        received Flow Metadata object is stored against the Path state. When a
        subsequent PATH message is received with a modified Metadata object, the
        intermediate node determines the attributes that have been removed,
        modified and/or added by comparing the old and new objects, and takes
        appropriate actions.</t>

        <t>As a result of these actions, an intermediate node may add new
        attributes to the Metadata object received in the PATH message and
        signal them downstream. It can also modify some of the attributes
        present in the Flow Metadata object. RSVP does not have any transport
        protocol specific restrictions and the exact set of attributes that
        can be inserted and modified by intermediate nodes is described in
        [ID-FMD-FRAMEWORK]. Depending on local policies, an intermediate node
        may also remove some of the attributes received in the Metadata object
        of a Path message before forwarding downstream.</t>

        <t>An intermediate node that receives a Resv message with a Metadata
        Object SHOULD store the object against the state and forward it
        unexamined and unmodified.</t>

      </section>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC2119;

      <reference anchor="min_ref">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization/>
          </author>

          <date year="2006"/>
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->

      &RFC2629;

      &RFC3552;

      &I-D.narten-iana-considerations-rfc2434bis;

      <!-- A reference written by by an organization not a person. -->
    </references>

    <section anchor="examples" title="Encoding usage examples">
      <t>TBD</t>
    </section>
  </back>
</rfc>
