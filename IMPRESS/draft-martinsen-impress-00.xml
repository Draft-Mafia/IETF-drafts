<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc5245 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5245.xml">
<!ENTITY rfc5389 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5389.xml">
<!ENTITY rfc4594 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4594.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="no" ?>
<?rfc colonspace='yes' ?>
<?rfc tocindent='yes' ?>
<?rfc comments='yes' ?>
<?rfc inline='yes' ?>

<?rfc needLines="yes" ?>
<rfc category="std" docName="draft-martinsen-impress-00" ipr="trust200902">
  <front>
    <title abbrev="IMPRESS">In-band Media PRopErties Signalling with STUN</title>

    
    <author fullname="Paal-Erik Martinsen" initials="P.E" surname="Martinsen">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>Philip Pedersens vei 20</street>
          <city>Lysaker</city>
          <region>Akershus</region>
          <code>1366</code>
          <country>Norway</country>
        </postal>
        <email>palmarti@cisco.com</email>
      </address>
    </author>

    <date/>

    <workgroup>TRAM</workgroup>

    <abstract>
      <t>
        It can be useful for applications to provide some limited
        information regarding the properties of the data the
        application is sending. Such properties can be used by on-path
        devices to give the application a better user experience. It
        is also useful for the application to know the current status
        of the on-path devices (Network). If the application knows
        that the network path is congested, it can take appropriate
        action to not make the situation any worse.
      </t>
      
      <t>
        This draft describes how this can be achieved by adding two
        small attributes to any STUN packet sent by the
        application. For example; such STUN packets are sent during
        call setup when ICE connectivity checks er performed or when
        the call is established in keep-alive messages. The application
        and devices on the media path can use the information in the
        two STUN attributes to prioritize the flow, perform traffic
        engineering, or provide network analytics.
      </t>

      <t>
        This STUN attributes in this draft are on purpose small and
        strictly specified. This is to avoid unnecessary information
        leakage and other security concerns regarding growing the size
        of the STUN message. The functionality described here is
        referred to as IMPRESS.
      </t>  
    </abstract>
    
    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>
        In the context of Content, Mobile, Fixed Service, Service
        Providers, Enterprise and Private networks have a need to
        prioritize packet flows end-to-end. These flows are often
        dynamic, time-bound, encrypted, peer-to-peer, possibly
        asymmetric, and might have different priorities depending on
        network conditions, direction, time of the day, dynamic user
        preferences and other factors. These factors may be time
        variant, and thus need to be signalled. Moreover, in many
        cases of peer-to-peer communication, flow information is known
        only to the endpoint. These considerations, coupled with the
        trend to use encryption for browser-to-browser communication
        <xref target="I-D.ietf-rtcweb-security-arch"/>, imply that
        access lists, deep packet inspection and other static
        prioritization methods cannot be employed successfully to
        prioritize packet flows. This specification describes how
        these problems can be solved by using defining two strictly
        defined STUN <xref target="RFC5389"/> attributes which can be
        added to any STUN message the client wants to send. STUN
        messages are typically sent during the ICE
        <xref target="RFC5245"/> connectivity check phase when the
        media session is established, or when keep-alive STUN messages
        are sent after the session is established. The application is
        not limited to those two scenarios, if some communication
        between application and network is needed it can choose to do
        so at any time. 
      </t>
      <t>
        Devices on the media path can use the information in the STUN
        attributes to prioritize the flow, perform traffic
        engineering, or provide network analytics. Applications can
        use information in network status attribute to influence rate
        stating points or rate adaption mechanisms.
      </t>

      <t>
        This document describes a mechanism for how such application
        properties and network status can be sent by STUN. The
        functionality described here is referred to as IMPRESS. Due to
        the security implications described in (TODO: Ref Martins
        draft) where large STUN packet are used amplify an attack,
        keeping the added STUN attributes is an important design
        consideration. To avoid unwanted information leakage the two
        defined attributes STREAM_PROPERTIES and NETWORK_STATUS are
        strictly defined in this draft.
      </t>
    </section>

    <section title="General Usage">
      <t>
        This draft defines several attributes that can be added to a
        STUN message; STREAM-TYPE, BANDWIDTH-USAGE, DELAY-TOLERANCE,
        LOSS-TOLERANCE and NETWORK-STATUS. Se
        <xref target="new_attributes" /> for the
        formal description. It is RECOMMENDED to add them to a STUN
        request response pair, especially if the NETWORK STATUS
        attribute is in use.
      </t>
      
      <t>
        The STREAM-TYPE, BANDWIDTH-USAGE, DELAY-TOLERANCE,
        LOSS-TOLERANCE attributes MUST be added before any
        INTEGRITY attribute. It is RECOMMENDED to only add this
        attribute to STUN messages containing a INTEGRITY attribute
        as this prevents tampering with the content of the attribute.
      </t>
      
      <t>
        If the client wants to receive feedback from the network it
        must add a empty NETWORK-STATUS attribute. This attribute
        MUST be added after the INTEGRITY attribute, as on-path
        devices will write information into this attribute. Having a
        readily available attribute to write into will save the the
        on-path device from growing buffers to add their own
        attribute. On path devices SHOULD not add their own
        NETWORK-STATUS attribute.
      </t>
      
      <t>
        If an agent receives a STUN request with a NETWORK-STATUS
        attribute after the INTEGRITY attribute, it should copy the
        content into a new NETWORK-STATUS attribute and add it before
        the INTEGRITY attribute when sending the STUN response. A new
        empty NETWORK-STATUS attribute can be added after the
        INTEGRITY attribute. New STEAM-PROPERTIES attributes can also
        be added describing the stream in this direction.
      </t>
      
      <t>
        If an agent receives a STUN response with a NETWORK-STATUS
        attribute before the INTEGRITY attribute, this describes the
        stream in the upstream direction. A NETWORK-STATUS attribute
        after the INTEGRITY attribute describes the stream in the
        downstream direction.
      </t>
      <t>
        It might make sense to distinguish IMPRESS packets from normal STUN
        packets. This would prevent unnecessary processing of normal
        STUN packets on the network nodes.
      </t>
      <t>
        A few alternatives (Needs discussion):
        <list style="numbers">
          <t>
            Alter the STUN magic cookie. (But than i would not be a
            STUN packet anymore, and that raises a new set of
            problems)
          </t>
          <t>
            Add a special this is IMPRESS attribute. This must be the
            first attribute in the message. This allows for network
            node to look for IMPRESS packets at a fixed offset without
            needing to parse the entire packet.
          </t>
          <t>
            Alter the transaction id. This might be problematic if
            using it in conjunction with ICE connectivity checks. But
            probably fine in other scenarios.
          </t>
          <t>
            Define a new STUN Method. Also brakes ICE, makes it
            harder to tag onto attributes to already in use messages.
          </t>
        </list>
      </t>
      
      <t>
        <cref anchor="Q1" source="palmarti">Do we want to restrict
          this to req/resp or do we want to allow for the attributes
          to be added in this fashion for indications as well?</cref>
      </t>
      <t>
        <figure title="IMPRESS example flow">
        <artwork><![CDATA[  
  Alice                router1            router2              Bob
   |                      |                   |                  |
   |Binding_Request       |                   |                  |
(1)|--------------------->|(2)                |                  |
   |                      |                   |                  |
   |                      |Binding_Request    |                  |
   |                      |------------------------------------->|
   |                      |                   |                  |
   |                      |                   | Binding_Response |
   |                      |                   |<-----------------|(3)
   |                      |  Binding_Response |                  |
   |<-----------------------------------------|(4)               |
   |(5)                   |                   |                  |

]]></artwork>
        </figure>
        <list style="numbers">
          <t>
            Alice creates a Binding Request, adds STREAM-TYPE,
            BANDWIDTH-USAGE, DELAY-TOLERANCE, LOSS-TOLERANCE attributes
            before the INTEGRITY attribute and a single NETWORK-STATUS
            attribute after the INTEGRITY attribute.
          </t>              
          <t>
            Router1 inspects the STUN Request message and reads
            any STREAM-TYPE, BANDWIDTH-USAGE, DELAY-TOLERANCE or
            LOSS-TOLERANCE attributes and the information they
            contain. It then updates the NETWORK-STATUS attribute
            with any information the router have. It then forwards the
            request.
          </t>
          <t>
            Bob processes the STUN Request. When Bob builds the
            response, it copies the NETWORK-STATUS attribute into the
            STUN Response before the INTEGRITY check and adds new
            empty NETWORK-STATUS attribute after the INTEGRITY
            attribute. Bob then transmits the message.
          </t>
          <t>
            Router2 (first IMPRESS network element for the downstream
            direction) inspects the Response message, reads the
            STREAM-TYPE, BANDWIDTH-USAGE, DELAY-TOLERANCE or
            LOSS-TOLERANCE attributes and MAY alter the NETWORK-STATUS
            attribute located after the INTEGRITY attribute. It then
            transmits the message.
          </t>
          <t>
            When Alice receives the STUN Response, she can extract the
            STREAM-TYPE, BANDWIDTH-USAGE, DELAY-TOLERANCE or
            LOSS-TOLERANCE attributes and the two NETWORK-STATUS
            attributes to get a complete picture of what the remote
            agent is sending and how the status of both the upstream
            and downstream path.
          </t>
        </list>
      </t>
    </section>
    
    <section title="Interaction with ICE">
      <t>
        An ICE connectivity check is performed by sending a STUN
        Binding indication. Prior to sending the agent can add one
        STREAM-TYPE attribute. If added, only one MUST be added.
        This is to avoid unnecessary large STUN packets during the
        connectivity checks. If the connectivity check is sent on a
        5-tuple that multiplexes different types of media and more
        detailed information wants to be signalled it should be done
        after the connectivity check phase is finished.
      </t>
      <t>
        This limits the information the STUN messages are able to
        convey during the connectivity checks, but also avoids adding
        network confusion with BANDWIDTH-USAGE attributes describing
        different paths that never going to be utilized.
      </t>
      <t>
        <cref anchor="Q2" source="palmarti">
          Problem with consent freshness if not based on STUN.
        </cref>
      </t>  
      
    </section>
    <section title="Multiplexed streams">
      <t>
        TODO: Write. Explain in detail what options you have with
        multiplexed streams. If not used in conn checks you can add
        more than one attribute. 
      </t>
    </section>
    
    <section title="Network Processing">
      <t>
        TODO: Write properly. Update the node cont field. Only
        update other fields if they are worse than what is already
        there (Aggregated result). Values are only hints, no
        promises. Will not describe algorithm to calculate
        congestion value. But values close to MAX may lead to
        applications rate adoption mechanisms to kick in. (Fairness problem)
      </t>
      <t>
        TODO: Describe interaction with DSCP. The rtcweb-qos documents
        explicitly says how to map for instance video to a DSCP
        value. If the DSCP values was somehow reset on the path (That
        happens) the router can remark the IP packets correctly by
        looking at the STUN message. (IE the signalling in the STUN
        message survives the whole path, and is integrity protects,
        but the network node have no way of detecting that...)
      </t>
    </section>
    
    <section title="New STUN attributes" anchor="new_attributes" >
      <t>
        This STUN extension defines the following new attributes:
      </t>
      <figure>
        <artwork align="left"><![CDATA[
      0xXXX0: STREAM-TYPE
      0xXXX1: BANDWIDTH-USAGE
      0xXXX2: STREAM-PRIORITY
      0xYYYY: NETWORK STATUS
           ]]></artwork>
      </figure>

      <section title="STREAM-TYPE">
        <t>
          This attribute have a length that are multiples of 4 (32) so
          no padding is necessary.
        </t>
        
        <figure anchor="stream_type_attr" title="STREAM TYPE Attribute">
          <artwork align="left"><![CDATA[
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|              TYPE             |         TBD                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      ]]></artwork>
        </figure>
        <t>
          <list style="hanging">
            <t hangText="TYPE:"> STREAM TYPE a a 16 bit value
              defined in below  describing the flow.
            </t>
          </list>
        </t>
        
        <t>
          There are four stream types types defined:
          <figure anchor="stream_types" title="STREAM Types">
            <artwork align="left"><![CDATA[
     0x0001 Audio
     0x0002 Video
     0x0004 Application Data
     0x0008 Other
      ]]></artwork>
          </figure>
          The intention is to keep the number of types limited and
          general. (Avoiding descriptions like high quality and
          similar that change over time) 
        </t>
        
        <t>
          It is possible to combine the stream types if a stream
          contains more than one type. 
        </t>
        
        <t>
          If a 5-tuple is used to send both a audio and video
          stream, the stream type can be set to 0x0006. 
          This can be useful if the
          application wants to hint that the 5-tuple contains
          several streams, This is useful if the attribute is added to STUN
          binding requests during ICE connectivity checks. If more
          information regarding multiplexed streams is needed it is
          possible to add more than one attribute to a STUN message
          (See section ??). This can be done to STUN messages that
          are being sent after the connectivity check phase is
          finished (Keepalive, consent freshness). During this phase
          the added size of the STUN messages pose no security
          threat.
        </t>
        

      </section>

      <section title="BANDWIDTH-USAGE">
        <t>
          This attribute have a length that are multiples of 4 (32) so
          no padding is necessary.
        </t>
        
        <figure anchor="bandwidth_usage_attr" title="BANDWIDTH USAGE Attribute">
          <artwork align="right"><![CDATA[
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|             AVARAGE (kbps)    |           MAX (kbps)          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      ]]></artwork>
        </figure>
        <t>
          <list style="hanging">
            <t hangText="AVARAGE:"> Expected sustained bandwidth
              usage for this stream. Note that for elastic types of
              streams like video, sudden large movements in the
              picture my lead to this value being inaccurate.
            </t>
            <t hangText="MAX:"> The maximum bandwidth usage for this
              stream. If the sustained and max value differ greatly it
              might be safe to assume that an elastic encoder is in
              use. (Would it be useful to say something about
              expected BURST lengths?)
            </t>
            
          </list>
        </t>
      </section>
      
      <section title="STREAM-PRIORITY">
        <t>
          This attribute have a length that are multiples of 4 (32) so
          no padding is necessary.
        </t>
        
        <figure anchor="stream_priority_attr" title="STREAM PRIORITY Attribute">
          <artwork align="right"><![CDATA[
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Priority      |D|    TBD      |           Stream IDX          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           Session ID                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      ]]></artwork>
        </figure>
        <t>
          <list style="hanging">
            
            <t hangText="Priority:"> Describes this streams priority
              among other streams coming from this
              endpoint/application (With same session ID). Values
              range from 255 (0xFF) to 0.
            </t>
            
            <t hangText="D:"> Delay sensitive. The application can set
              this bit as a hint to the network element that the
              stream is delay sensitive. (Unsure if this is useful)

            </t>

            <t hangText="Stream IDX:"> Application can choose set this
              to ease debugging in the network. A reasonable value can
              foe example be the index have in the SDP.
            </t>

            <t hangText="Stream ID:"> Identification to distinguish
              what session this stream is part of. This MUST have the
              same value for all the media streams the application wants
              to give differentiated services. (Note that this ID may
              overlap with other streams that originates from a
              different IP address. The network element MUST only
              prioritize among streams with the same Session Id
              originating from the same IP)

            </t>
          </list>
        </t>
                
      </section>
     
      
      <section title="NETWORK STATUS">
        <t>
          This attribute have a length that are multiples of 4 (32) so
          no padding is necessary.
        </t>
      
        <t>
          This attribute MUST be added after any INTEGRITY attribute
          in the STUN message. Values in this attribute can be updated
          along the network path by nodes that are not able to
          regenerate a correct INTEGRITY attribute. 
        </t>
        <figure anchor="network_status_attr" title="NETWORK STATUS Attribute">
          <artwork align="right"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Congestion Lvl| Node Cnt      |    0xFFFF                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      ]]></artwork>
        </figure>
        <t>
          <list style="hanging">
            
            <t hangText="Congestion Lvl:"> Value in the range 0x00
              and Ox0F describing the level of congestion the
              network element is experiencing at this point. 0x00
              means no congestion, 0x0F Fully congested. The router
              can choose any value between those value as it sees
              fit. The application that sees those values might act
              on by doing some rate adaption or similar. The values
              0x10-0xFF are reserved for future use.
            </t>
            
            <t hangText="Node Cnt:"> Numbers of nodes that supports
              IMPRESS in the notwork path. Any router on the path that
              understands IMPRESS should increase this number. 
            </t>
                
          </list>
        </t>
      </section>
    </section>
    
  </middle>
  
  <back>
    <references title="Normative References">
      &rfc2119;
      
      <?rfc include="reference.RFC.5389"?>

      <?rfc include="reference.RFC.5245"?>
    </references>

    <references title="Informational References">
      <?rfc include='reference.I-D.ietf-rtcweb-security-arch' ?>

      <!--<?rfc include='reference.I-D.muthu-behave-consent-freshness' ?>-->
    </references>

    
 

    <!--
      -->
  </back>
</rfc>

